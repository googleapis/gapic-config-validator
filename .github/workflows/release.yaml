---
name: release
on:
  push:
    tags:
      - '*'

jobs:
  inspect:
    runs-on: ubuntu-latest
    container: golang:1.13
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set version
        run: echo '::set-output name=version::${GITHUB_REF#refs/*/}'
        id: set_version
    outputs:
      version: ${{ steps.set_version.outputs.version }}
  release:
    runs-on: ubuntu-latest
    needs: inspect
    if: ${{ needs.inspect.outputs.version }}
    steps:
      - name: Create the GitHub release.
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ needs.inspect.outputs.version }}
          release_name: ${{ needs.inspect.outputs.version }
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  build:
    runs-on: ubuntu-latest
    needs:
      - inspect
      - release
    strategy:
      matrix:
        osarch:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: darwin
            arch: amd64
          - os: windows
            arch: amd64
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "1.13"
      - uses: actions/checkout@v3
      # This project does not use these deps,  but we need them to build the
      # binaries.
      #
      # Mousetrap is installed individually because it is needed for the
      # Windows build. Since we are building on Linux, it is not installed
      # automatically as a dependency.
      - name: Install the cross-platform build tool.
        run: |
          go get github.com/mitchellh/gox
          go get github.com/inconshreveable/mousetrap
      - name: Build for the ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} platform.
        run: |
          gox -osarch ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} -output protoc-gen-gapic-validator ./cmd/protoc-gen-gapic-validator
          gox -osarch ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} -output gapic-error-conformance ./cmd/gapic-error-conformance
          tar cvfz gapic-config-validator.tar.gz protoc-gen-gapic-validator gapic-error-conformance
      - name: Upload the ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} release.
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./gapic-config-validator.tar.gz
          asset_name: gapic-config-validator-${{ needs.inspect.outputs.version }}-${{ matrix.osarch.os }}-${{ matrix.osarch.arch }}.tar.gz
          asset_content_type: application/tar+gzip
