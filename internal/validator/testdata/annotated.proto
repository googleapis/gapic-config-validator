// Copyright 2019 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

package annotated;

option go_package = "internal/validator/testdata;testdata";

message Foo {
  option (google.api.resource) = {
    type: "foo.bar.com/Foo"
    pattern: "projects/{project}/foo/{foo}"
    name_field: "a"
  };

  string a = 1;

  Bar bar = 2;

  string req = 3 [(google.api.field_behavior) = REQUIRED];
}

message Bar {
  string b = 1 [(google.api.field_behavior) = OPTIONAL];

  Baz baz = 2;

  string a = 3 [(google.api.resource_reference).type = "foo.bar.com/Foo"];

  string def = 4;

  string remote = 5 [(google.api.resource_reference).child_type = "foobar.api.com/FooBar"];

  string remote_res_def = 6 [(google.api.resource_reference).type = "foobar.api.com/FooBarBaz"];
}

message Baz {
  option (google.api.resource) = {
    type: "foo.bar.com/Diff"
    pattern: "baz/biz/buz"
  };

  string c = 1 [(google.api.resource_reference).type = ""];

  repeated Biz biz = 2;

  string name = 3;
}

// Message with same name as a resource type for resolution testing.
message Diff {
  string name = 1;
}

message Biz {
  string d = 1 [(google.api.resource_reference).type = "foo.bar.com/Buz"];

  string e = 2 [(google.api.resource_reference).type = "foo.bar.com/Qux"];
}

message Qux {
  string req = 1 [(google.api.resource_reference).type = "locations.googleapis.com/Location"];

  string e = 2 [(google.api.resource_reference).type = "*"];
}

message Wibble {
  option (google.api.resource) = {
    type: "abc.def.com/Wibble"
  };
}

message Wobble {
  option (google.api.resource) = {
    type: ""
    pattern: "missing/{type}"
  };

  string name = 1;
}

message Wubble {
  option (google.api.resource) = {
    type: "badresource_type_kind/badresource_type_kindbadresource_type_kindbadresource_type_kindbadresource_type_kindbadresource_type_kind"
    pattern: "bad/{resource_type_kind}"
  };
  
  string name = 1;
}

message Flob {
  option (google.api.resource) = {
    type: "missing_service_name"
    pattern: "bad/{resource_type_kind}"
  };
  
  string name = 1;
}

message Waldo {
  string name = 1 [(google.api.resource_reference).type = "foo.bar.com/Diff"];
}